import { Node, NodeTypes } from "../Nodes";
import { NumberToken, Token, TokenTypes } from "../Token";

/**
 * Interface for parsing tokens into an abstract syntax tree (AST).
 * The Parser processes tokens generated by the Lexer and constructs an AST.
 */
export interface IParser {

    /**
     * Parses an array of tokens into an abstract syntax tree (AST).
     * @param tokens An array of tokens generated from the raw expression.
     * @throws {Error} if anything is wrong with the tokens or their order
     * @returns The root node of the abstract syntax tree representing the expression.
     */
    parse(tokens: Token[]): Node;
}