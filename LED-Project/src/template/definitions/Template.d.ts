export type Template = {
    // Name of the template
    name: string,
    // Author of the template
    author: string,

    /**
     * Basic code where everything is inserted into.
     * 
     * It has three basic global variables
     * 
     * $$setup$$, $$loop$$ and $$globals$$ and can optionally have more specified by variables which
     * will also then be enclosed in $$ characters and print into the blueprint
     */
    blueprint?: string,

    // Hooks which hook into specific parts of the code generation
    hooks?: {[key in keyof Hooks]?: string};

    // Variables which are used by the blueprint or hooks
    variables?: {[key: string]: number}
}

// The hooks which can be used to "hook" into which specific parts of the code are generated
export type Hooks = {
    
    /**
     * Is used to send the internally set led array out to the hardware (LED-Stripe)
     */
    pushleds: string,

    /**
     * Used to delay executing until a certain number of milliseconds have been passed.
     * 
     * Available variables: $$time$$ (Time to wait in milliseconds)
     */
    sleep: string,

    /**
     * Used to set the led at a given index to a specific HSV (Hue Saturation Value) color
     * The h,s,v values are integers between 0 and 255 (Inclusive)
     * 
     * Available variables:
     *  - $$idx$$ (Index of the led, starting from 0 for the first)
     *  - $$hue$$, $$saturation$$, $$value$$
     */
    sethsv: string,

    /**
     * Returns a long value which represents the amount of time that has passed since the microcontroller has
     * started executing code.
     * 
     * Usually used to calculate animations over time
     */
    millis: string,

    /**
     * The setup and loop hooks which every standard block will be wrapped inside.
     * 
     * Meaning the code generated by a single block that is directly placed under loop will be wrapped by the code that is given here
     * 
     * Available variables:
     *  - $$code$$ the actual code of the block
     *  - $$count$$ the index of the block which is generated here. Meaning for the first block inside for example setup it would be 0, for the second 1 and so on
     */
    setup: string,
    loop: string,
}