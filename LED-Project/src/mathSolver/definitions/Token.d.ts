// Define string literal union type for TokenTypes
type TokenTypes = 'PLUS' | 'MINUS' | 'MUL' | 'DIV' | 'LPAREN' | 'RPAREN' | 'EOF' | 'NUMBER' | 'VARIABLE';

// Shared interface for common properties of tokens
interface BaseToken {
    type: TokenTypes;  // Type of token
}

// Token representing a numeric value
export interface NumberToken extends BaseToken {
    value: number;        // The numerical value of the token
    type: 'NUMBER';       // Type of token, indicating it's a number
}

// Token representing a variable
export interface VariableToken extends BaseToken {
    name: string;        // The name of the variable
    type: 'VARIABLE';    // Type of token, indicating it's a variable
}

/**
 * Tokens are generated by the lexer to be parsed into an abstract syntax tree for further processing.
 */
export type Token = NumberToken | VariableToken | BaseToken;